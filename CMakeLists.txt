CMAKE_MINIMUM_REQUIRED(VERSION 3.20)

PROJECT(Btrc)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE "Release" CACHE STRING "Options: Debug Release RelWithDebInfo MinSizeRel." FORCE)
ENDIF()

############## cuda

FIND_PACKAGE(CUDAToolkit REQUIRED)

#ADD_EXECUTABLE(embed "${PROJECT_SOURCE_DIR}/lib/embed/embed_file.c")
#SET_TARGET_PROPERTIES(embed PROPERTIES FOLDER "EmbedPTX")

#SET(BTRC_EMBED_PTX_DIR "${CMAKE_BINARY_DIR}/embed_ptx")

#FUNCTION(BTRC_EMBED_PTX)
#    SET(TARGET_NAME ${ARGV0})
#    SET(PTX_TARGET  ${ARGV1})
#    SET(CU_FILENAME ${ARGV2})
#    ADD_LIBRARY(${PTX_TARGET} OBJECT ${CU_FILENAME})
#    SET_PROPERTY(TARGET ${PTX_TARGET} PROPERTY CUDA_STANDARD 17)
#    SET_PROPERTY(TARGET ${PTX_TARGET} PROPERTY CUDA_STANDARD_REQUIRED ON)
#    SET(VAR_NAME    embed_var_${PTX_TARGET})
#    SET(PTX_FILENAME $<TARGET_OBJECTS:${PTX_TARGET}>)
#    SET(INL_FILENAME "${CMAKE_BINARY_DIR}/embed_ptx/embed_ptx/${PTX_TARGET}.inl")
#    SET_PROPERTY(TARGET ${PTX_TARGET} PROPERTY CUDA_PTX_COMPILATION ON)
#    SET_PROPERTY(TARGET ${PTX_TARGET} PROPERTY CUDA_ARCHITECTURES OFF)
#    ADD_CUSTOM_COMMAND(
#        OUTPUT  ${INL_FILENAME}
#        COMMAND embed ARGS
#        ${INL_FILENAME}
#        ${VAR_NAME} ${PTX_FILENAME}
#        DEPENDS $<TARGET_OBJECTS:${PTX_TARGET}> ${PTX_TARGET} embed)
#    ADD_CUSTOM_TARGET(
#        EmbedPTX_${PTX_TARGET} ALL
#        DEPENDS ${INL_FILENAME})
#    SET_TARGET_PROPERTIES(${PTX_TARGET} PROPERTIES FOLDER "EmbedPTX")
#    SET_TARGET_PROPERTIES(EmbedPTX_${PTX_TARGET} PROPERTIES FOLDER "EmbedPTX")
#    TARGET_INCLUDE_DIRECTORIES(${TARGET_NAME} PRIVATE ${BTRC_EMBED_PTX_DIR})
#    ADD_DEPENDENCIES(${TARGET_NAME} EmbedPTX_${PTX_TARGET})
#ENDFUNCTION()

############## cuj

SET(CUJ_BUILD_TEST OFF)
SET(CUJ_BUILD_EXAMPLE OFF)
ADD_SUBDIRECTORY(lib/cuj)
SET_TARGET_PROPERTIES(cuj PROPERTIES FOLDER "ThirdParty")

############## tiny obj loader

ADD_SUBDIRECTORY(lib/tinyobjloader)

SET_TARGET_PROPERTIES(tinyobjloader PROPERTIES FOLDER "ThirdParty")

############## stb & exr

ADD_SUBDIRECTORY(lib/stb)
ADD_SUBDIRECTORY(lib/tinyexr)

SET_TARGET_PROPERTIES(stb tinyexr PROPERTIES FOLDER "ThirdParty")

############## json

ADD_SUBDIRECTORY(lib/nlohmann)

############## components

ADD_SUBDIRECTORY(src/common)
ADD_SUBDIRECTORY(src/core)
ADD_SUBDIRECTORY(src/factory)
ADD_SUBDIRECTORY(src/builtin)
ADD_SUBDIRECTORY(src/cli)
