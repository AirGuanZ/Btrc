CMAKE_MINIMUM_REQUIRED(VERSION 3.20)

PROJECT(BTRC-CORE LANGUAGES CUDA CXX)

FILE(GLOB_RECURSE CPP_SRC
		"${CMAKE_CURRENT_SOURCE_DIR}/*.cpp"
		"${CMAKE_CURRENT_SOURCE_DIR}/*.inl"
		"${CMAKE_CURRENT_SOURCE_DIR}/*.h")

SET(CU_SRC "${CMAKE_CURRENT_SOURCE_DIR}/src/renderer/wavefront/sort/sort_kernel.cu")

SET(SRC ${CPP_SRC} ${CU_SRC})

ADD_LIBRARY(BtrcCore STATIC ${SRC})

FOREACH(_SRC IN ITEMS ${SRC})
    GET_FILENAME_COMPONENT(SRC "${_SRC}" PATH)
    STRING(REPLACE "${PROJECT_SOURCE_DIR}/inc/btrc/core" "inc" _GRP_PATH "${SRC}")
    STRING(REPLACE "${PROJECT_SOURCE_DIR}/src" "src" _GRP_PATH "${_GRP_PATH}")
    STRING(REPLACE "/" "\\" _GRP_PATH "${_GRP_PATH}")
    SOURCE_GROUP("${_GRP_PATH}" FILES "${_SRC}")
ENDFOREACH()

IF(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
    # work around for https://github.com/microsoft/STL/issues/1814
    SET_PROPERTY(TARGET BtrcCore PROPERTY CXX_STANDARD 23)
    TARGET_COMPILE_DEFINITIONS(BtrcCore PUBLIC _CRT_SECURE_NO_WARNINGS)
ELSE()
    SET_PROPERTY(TARGET BtrcCore PROPERTY CXX_STANDARD 20)
ENDIF()
SET_PROPERTY(TARGET BtrcCore PROPERTY CXX_STANDARD_REQUIRED ON)

SET_PROPERTY(TARGET BtrcCore PROPERTY CUDA_STANDARD 17)
SET_PROPERTY(TARGET BtrcCore PROPERTY CUDA_STANDARD_REQUIRED ON)
SET_PROPERTY(TARGET BtrcCore PROPERTY CUDA_ARCHITECTURES OFF)

TARGET_COMPILE_OPTIONS(BtrcCore PUBLIC $<$<COMPILE_LANGUAGE:CUDA>:--use_fast_math>)
TARGET_COMPILE_DEFINITIONS(BtrcCore PUBLIC NOMINMAX)

IF(NOT DEFINED Optix_DIR)
    MESSAGE(FATAL_ERROR "Optix_DIR is not specified")
ENDIF()

TARGET_INCLUDE_DIRECTORIES(
    BtrcCore PUBLIC
    "${CMAKE_CURRENT_SOURCE_DIR}/inc"
    "${Optix_DIR}/include")

TARGET_LINK_LIBRARIES(
    BtrcCore PUBLIC
    cuj CUDA::cudart_static CUDA::cuda_driver stb tinyexr tinyobjloader)

#BTRC_EMBED_PTX(BtrcCore trace "${CMAKE_CURRENT_SOURCE_DIR}/src/wavefront/trace.cu")
#TARGET_INCLUDE_DIRECTORIES(
#    trace PUBLIC
#    "${Optix_DIR}/include"
#    "${CMAKE_CURRENT_SOURCE_DIR}/inc")
